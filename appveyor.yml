##
# The autocmake project test configuration for Windows OS at AppVeyor
#
# Current software used:
# OS: 64-bit Windows Server 2012 R2
# Compilers: 64-bit MinGw-w64 5.1.0 (downloaded during script execution)
# Python: 2.7, both 32-bit and 64-bit versions
# Python: 3.4, both 32-bit and 64-bit versions
#
# Notes:
# Where "ps:" is used commands are executed in PowerShell
##
##   Script assembled by Ivan Hrasko, adapted by Miro Ilias
##

# build version format: 1.0.1, 1.0.2, ...
version: 1.0.{build}

# prepare environment
environment:
# set custom path (will be more extended later in build_script section)
  path: C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Git\cmd;C:\Program Files\7-Zip;C:\Program Files (x86)\CMake\bin
# set MinGw-w64 (64-bit) version 5.1.0 download URL
  url: http://kent.dl.sourceforge.net/project/mingw-w64/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/5.1.0/threads-posix/seh/x86_64-5.1.0-release-posix-seh-rt_v4-rev0.7z
# user can possibly use different Python versions, we try to test multiple cases
# 64-bit version on 64-bit system allows easier installation of Python packages using .exe installers
# and better CMake automatic detection of some Python tools
  matrix:
# Python 2.7; 32-bit version
    - python: C:\Python27;C:\Python27\Scripts
# Python 2.7; 64-bit version
    - python: C:\Python27-x64;C:\Python27-x64\Scripts
# Python 3.4; 32-bit version
    - python: C:\Python34;C:\Python34\Scripts
# Python 3.4; 64-bit version
    - python: C:\Python34-x64;C:\Python34-x64\Scripts

build_script:
# add location of used Python to path
- set path=%path%;%python%

# create dir for custom software and move there
- mkdir C:\software && cd C:\software

# download and unpack MinGw-w64 compilers
- ps: wget $env:url -OutFile MinGW.7z
- 7z x MinGW.7z > NUL

# add compilers binary dir to path
- set path=%path%;C:\software\mingw64\bin
- echo %path%

# go back to project source dir
- cd %APPVEYOR_BUILD_FOLDER%
- cd cmake
- ps: wget https://github.com/scisoft/autocmake/raw/master/update.py -OutFile update.py

test_script:
# 
- python update.py --self
- python update.py ..
- cd ..
# static+coverage is causing SegFault (?), try remove coverage...
#- python setup.py --generator="MinGW Makefiles" --fc=gfortran --int64 --static  build_gfortran_int64_static
#- cd build_gfortran_int64_static
#- mingw32-make
#- bin\example.exe
#- cd ..
# next round
- python setup.py --generator="MinGW Makefiles" --fc=gfortran --static build_gfortran_static
- cd build_gfortran_static
- mingw32-make
- bin\example.exe
- cd ..
# next round
- python setup.py --generator="MinGW Makefiles" --fc=gfortran --int64  build_gfortran_int64
- cd build_gfortran_int64
- mingw32-make
- bin\example.exe
# next round
- python setup.py --generator="MinGW Makefiles" --fc=gfortran  build_gfortran
- cd build_gfortran
- mingw32-make
- bin\example.exe
- cd ..
# next round
- python setup.py --generator="MinGW Makefiles" --fc=gfortran --coverage build_gfortran_coverage
- cd build_gfortran_coverage
- mingw32-make
- bin\example.exe
- cd ..
